WARNING:  These CloudFormation templates are for demo and proof-of-concept purposes only.  They and are not intended for production environments.  Amongst other deficiencies, they:
    - do not follow the rule of least privileged access, and will create IAM Roles with the 'AdministratorAccess' AWS Managed policy
    - will serve public traffic from the Elasticsearch domain over unencrypted HTTP connections

1.  Launch the 'aws_ebs_vol_lost_cfn.yaml' CloudFormation template.
        - This template will build out the required StepFunctions State Machine and Lambda functions that would action a Personal Health Dashboard event.  It also creates a small Elasticsearch domain for visualisation.
2.  Launch the 'aws_ebs_vol_lost_importantapp-cfn.yaml' CloudFormation template.
        - This template will build out the mock application that will be impacted by an EBS service disruption
3.  Copy the 'VolumeId' from the Outputs of the 'aws_ebs_vol_lost_importantapp-cfn.yaml' stack.
4.  Replace the 'vol-xxxxxxxxxxxxxxxxx' values in the 'phd-mock-event.json' with the VolumeId copied in step 3.
5.  Increment the value of 'id' and change the 'time' to within the past 14 days in 'phd-mock-event.json'.
6.  Navigate to StepFunctions, and enter the State Machine '*VolumeLost-*'
7.  Create a 'New Execution', pasting the contents of your modified 'phd-mock-event.json' (i.e. with the 'VolumeId', 'id', and 'time' updated).  This will trigger a replacement of the ImportantApp EC2 Instance.  Wait for this to complete.
8.  Open the Kibana dashboard (the URL can be found in the Outputs of the 'aws_ebs_vol_lost_cfn.yaml' CloudFormation Stack)
9. In Kibana, under 'Management > Index Patterns', create an index pattern named 'phd-events' using 'PhdEventTime' as the 'Time Filter'.
10. Under 'Management > Saved Objects', import 'elasticsearch-objects.json', overwriting all objects, and using 'phd-events' as the new index pattern.
11. Navigate to 'Dashboard > PHD Events' to see the event(s).
12. Repeat steps 3 to 7 to create additional mock events, incrementing 'id' and 'time'.
